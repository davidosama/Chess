/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chess;

import java.awt.BorderLayout;
import java.awt.Container;
import java.awt.Graphics;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;

/**
 *
 * @author Kero
 */
public class GameBoard extends javax.swing.JFrame implements MouseListener{
    
    
    public Bishop blackBishop;
    public Bishop whiteBishop;
    public Pawn blackPawn;
    public Pawn whitePawn;
    
    
    boolean PlayerSelected=false;
    PointMapper pm;
    int x =0;
    int y = 0;
    Tile [][] GameBoardTile;
    
    public GameBoard() {
                

        initComponents();
        
        jPanel1.setLayout(null);
        this.setLocationRelativeTo(null);
        pm = new PointMapper();
        GameBoardTile=pm.getBoardTilesArray();
        this.addMouseListener(this);
        initializePiecesPositions();
        
        JLabel jLabel1 = new javax.swing.JLabel();
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/chess/imgs/background.png"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 710, 700);

//        GameBoardTile[0][0].setPiece(piece);
        
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        TestMoveBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setMinimumSize(new java.awt.Dimension(700, 725));
        jPanel1.setPreferredSize(new java.awt.Dimension(720, 750));
        jPanel1.setRequestFocusEnabled(false);
        jPanel1.setLayout(null);

        TestMoveBtn.setText("move");
        TestMoveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TestMoveBtnActionPerformed(evt);
            }
        });
        jPanel1.add(TestMoveBtn);
        TestMoveBtn.setBounds(610, 30, 78, 29);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 705, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 702, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TestMoveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TestMoveBtnActionPerformed
        // TODO add your handling code here:
        
//            if (x>7)
//            {
//                x=0 ;
//                y ++;
//            }
//            if( x <8 && y <8)
//            WhiteBishop1Lbl.setLocation(pm.GetPoint(y, x++));
//            else
//            {
//                x = 0;
//                y=0;
//                WhiteBishop1Lbl.setLocation(pm.GetPoint(y, x++));
//            }
            
        
    }//GEN-LAST:event_TestMoveBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameBoard().setVisible(true);
                
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton TestMoveBtn;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent e) {
//        if(PlayerSelected){
//            PlayerSelected=!PlayerSelected;
//            Point p = e.getPoint();
//            p=pm.getTileNumber(p.x, p.y);
//            Tile temp = pm.BoardTilesArray[p.x][p.y];
//            
//        }
//        Point p = e.getPoint();
//        WhiteBishop1Lbl.setLocation(pm.getTileCoordinate(p.x, p.y));
    }

    @Override
    public void mousePressed(MouseEvent e) {
        System.out.println(e.getPoint().toString());
        System.out.println(e.getX());
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        
    }

    @Override
    public void mouseExited(MouseEvent e) {
       
    }
    
    public void initializePiecesPositions(){
        //put the Black Pawns
        for(int k =0;k<8;k++){
            Point p = pm.points[k][6];
            blackPawn= new Pawn("Black",p);
            blackPawn.label.setBounds(p.x, p.y, 60, 60);
            jPanel1.add(blackPawn.label);
            blackPawn.label.setVisible(true);
        }
        for(int k =0;k<8;k++){
            Point p = pm.points[k][1];
            whitePawn= new Pawn("White",p);
            whitePawn.label.setBounds(p.x, p.y, 60, 60);
            jPanel1.add(whitePawn.label);
            whitePawn.label.setVisible(true);
        }
        
       
        
   }

    @Override
    public void paintComponents(Graphics g) {
        super.paintComponents(g); //To change body of generated methods, choose Tools | Templates.
        
    }
    
    
}
